openapi: "3.0.2"
info:
  title: Name Game API
  version: "1.0"
servers:
  - url: http://localhost:8080/v1.0/
paths:
  /game/start/{type}:
    post:
      parameters:
        - in: path
          name: type
          schema:
            type: string
          required: true
          description: Type of game to create, valid options are timed or practice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /game/{gameId}/guess/{guessId}:
    get:
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
          required: true
          description: Game identifier
        - in: path
          name: guessId
          schema:
            type: string
          required: true
          description: Id of the headshot selected by the user to match the profile name
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /game/{gameId}/new-round:
    post:
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
          required: true
          description: Game identifier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /score/{gameId}:
    get:
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
          required: true
          description: Retrieves the score of the game ID provided
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /profiles/{id}:
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Retrieves the profile of the ID provided
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  responses:
    BadRequest:
      description: Unable to perform request due to invalid input value(s)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      description: An unexpected error occured
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Game:
      type: object
      properties:
        id:
          type: string
        gameType:
          type: string
        score:
          type: integer
          format: int32
        guessId:
          type: string
        tileIds:
          type: array
          items:
            type: string
        gameOver:
          type: boolean
        endTime:
          type: integer
          format: int64
    Profile:
      type: object
      properties:
        id:
          type: string
        bio:
          type: string
        firstName:
          type: string
        headshot:
          $ref: '#/components/schemas/HeadShot'
        jobTitle:
          type: string
        lastName:
          type: string
        slug:
          type: string
        socialLinks:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        type:
          type: string
    HeadShot:
      type: object
      properties:
        id:
          type: string
        alt:
          type: string
        mimeType:
          type: string
        url:
          type: string
    SocialLink:
      type: object
      properties:
        callToAction:
          type: string
        type:
          type: string
        url:
          type: string
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
